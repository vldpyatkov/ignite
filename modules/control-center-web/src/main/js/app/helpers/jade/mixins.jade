//-
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

//- Mixin for feedback on specified error.
mixin error-feedback(visible, error, errorMessage)
    i.fa.fa-exclamation-triangle.form-control-feedback(
        ng-if=visible
        bs-tooltip='"#{errorMessage}"'
        ignite-error=error
        ignite-error-message=errorMessage
    )

//- Mixin for feedback on unique violation.
mixin unique-feedback(visible, errorMessage)
    +error-feedback(visible, 'igniteUnique', errorMessage)

//- Mixin for feedback on IP address violation.
mixin ipaddress-feedback(visible)
    +error-feedback(visible, 'ipaddress', 'Invalid address!')

//- Mixin for checkbox.
mixin checkbox(lbl, model, name, tip)
    ignite-form-field.checkbox
        ignite-form-field-input-checkbox(
            data-id=name
            data-name=name
            data-ng-model=model
        )
        | #{lbl}
        ignite-form-field-tooltip
            | !{tip}

//- Mixin for checkbox with enabled condition.
mixin checkbox-enabled(lbl, model, name, enabled, tip)
    ignite-form-field.checkbox
        ignite-form-field-input-checkbox(
            data-id=name
            data-name=name
            data-ng-model=model
            data-ng-disabled='!(#{enabled})'
        )
        | #{lbl}
        ignite-form-field-tooltip
            | !{tip}

//- Mixin for java name field with enabled condition.
mixin java-class(lbl, model, name, enabled, required, tip)
    ignite-form-field
        ignite-form-field-label
            | #{lbl}
        ignite-form-field-tooltip
            | !{tip}
        ignite-form-field-java-class(
            data-id=name
            data-name=name
            data-ng-model=model
            data-ng-disabled='!(#{enabled})'
            data-ng-required=required
        )

//- Mixin for text field.
mixin text-ip-address(lbl, form, model, name, enabled, placeholder, tip)
    ignite-form-field
        ignite-form-field-label
            | #{lbl}
        ignite-form-field-tooltip
            | !{tip}
        ignite-form-field-input-text(
            data-id=name
            data-name=name
            data-ng-model=model
            data-ipaddress='true'
            data-ng-disabled='!(#{enabled})'
            data-placeholder=placeholder
        )
            +ipaddress-feedback(form + '.' + name + '.$error.ipaddress')

//- Mixin for text field.
mixin text-enabled(lbl, model, name, enabled, required, placeholder, tip)
    ignite-form-field
        ignite-form-field-label
            | #{lbl}
        ignite-form-field-tooltip
            | !{tip}
        ignite-form-field-input-text(
            data-id=name
            data-name=name
            data-ng-model=model
            data-placeholder=placeholder
            data-ng-disabled='!(#{enabled})'
            data-ng-required=required
        )

//- Mixin for text field.
mixin text(lbl, model, name, required, placeholder, tip)
    +text-enabled(lbl, model, name, 'true', required, placeholder, tip)

//- Mixin for text field with enabled condition with options.
mixin text-options(lbl, model, name, options, enabled, placeholder, tip)
    ignite-form-field
        ignite-form-field-label
            | #{lbl}
        ignite-form-field-tooltip
            | !{tip}
        ignite-form-field-input-datalist(
            data-id=name
            data-name=name
            data-ng-model=model
            data-options=options
            data-placeholder=placeholder
            data-ng-disabled='!(#{enabled})'
        )

//- Mixin for required numeric field.
mixin number-requited(lbl, model, name, required, enabled, placeholder, min, tip)
    ignite-form-field
        ignite-form-field-label
            | #{lbl}
        ignite-form-field-tooltip
            | !{tip}
        ignite-form-field-input-number(
            data-id=name
            data-name=name
            data-ng-model=model
            data-ng-required=required
            data-ng-disabled='!(#{enabled})'
            data-placeholder=placeholder
            data-min=min
        )

//- Mixin for required numeric field with maximum and minimum limit.
mixin number-min-max(lbl, model, name, enabled, placeholder, min, max, tip)
    +number-min-max-step(lbl, model, name, enabled, placeholder, min, max, '1', tip)

//- Mixin for required numeric field with maximum and minimum limit.
mixin number-min-max-step(lbl, model, name, enabled, placeholder, min, max, step, tip)
    ignite-form-field
        ignite-form-field-label
            | #{lbl}
        ignite-form-field-tooltip
            | !{tip}
        ignite-form-field-input-number(
            data-id=name
            data-name=name
            data-ng-model=model
            data-ng-disabled='!(#{enabled})'
            data-placeholder=placeholder
            data-min=min
            data-max=max
            data-step=step
        )

//- Mixin for numeric field.
mixin number(lbl, model, name, enabled, placeholder, min, tip)
    +number-requited(lbl, model, name, 'false', enabled, placeholder, min, tip)

//- Mixin for required dropdown field.
mixin dropdown-required(lbl, model, name, required, enabled, placeholder, options, tip)
    ignite-form-field
        ignite-form-field-label
            | #{lbl}
        ignite-form-field-tooltip
            | !{tip}
        ignite-form-field-dropdown(
            data-id=name
            data-name=name
            data-options=options
            data-ng-model=model
            data-ng-required=required
            data-ng-disabled='!(#{enabled})'
            data-placeholder=placeholder
        )

//- Mixin for dropdown field.
mixin dropdown(lbl, model, name, enabled, placeholder, options, tip)
    +dropdown-required(lbl, model, name, 'false', enabled, placeholder, options, tip)


//- Mixin for dropdown-multiple field.
mixin dropdown-multiple(lbl, model, name, placeholder, placeholderEmpty, options, tip)
    ignite-form-field
        ignite-form-field-label
            | !{lbl}
        ignite-form-field-tooltip
            | !{tip}
        ignite-form-field-dropdown(
            data-id=name
            data-name=name
            data-multiple='true'
            data-options=options
            data-ng-model=model
            data-placeholder='{{ #{options}.length > 0 ? "#{placeholder}" : "#{placeholderEmpty}" }}'
            data-disabled='!#{options}.length'
        )

//- Mixin for table text field.
mixin table-text-field(field, items, valid, save, placeholder, newItem)
    -var resetOnEnter = newItem ? '(stopblur = true) && (group.add = [{}])' : '(field.edit = false)'
    -var onEnter = valid + ' && (' + save + '); ' + valid + ' && ' + resetOnEnter + ';'

    -var onEscape = newItem ? 'group.add = []' : 'field.edit = false'

    -var resetOnBlur = newItem ? '!stopblur && (group.add = [])' : 'field.edit = false'
    -var onBlur = valid + ' && ( ' + save + '); ' + resetOnBlur + ';'

    ignite-form-field-input-text(
        data-name=field
        data-ng-model=field
        data-ng-required='true'
        data-placeholder=placeholder
        data-ignite-unique=items
        data-ignite-form-field-input-autofocus='true'
        on-enter=onEnter
        on-escape=onEscape
        ng-blur=onBlur
    )
        block

//- Mixin for table java class field.
mixin table-java-class-field(field, items, valid, save, newItem)
    -var resetOnEnter = newItem ? '(stopblur = true) && (group.add = [{}])' : '(field.edit = false)'
    -var onEnter = valid + ' && (' + save + '); ' + valid + ' && ' + resetOnEnter + ';'

    -var onEscape = newItem ? 'group.add = []' : 'field.edit = false'

    -var resetOnBlur = newItem ? '!stopblur && (group.add = [])' : 'field.edit = false'
    -var onBlur = valid + ' && ( ' + save + '); ' + resetOnBlur + ';'

    ignite-form-field-java-class(
        data-name=field
        data-ng-model=field
        data-ng-required='true'
        data-ignite-unique=items
        data-ignite-form-field-input-autofocus='true'
        on-enter=onEnter
        on-escape=onEscape
        ng-blur=onBlur
    )
        block

//- Mixin for table java package field.
mixin table-java-package-field(field, items, valid, save, newItem)
    -var resetOnEnter = newItem ? '(stopblur = true) && (group.add = [{}])' : '(field.edit = false)'
    -var onEnter = valid + ' && (' + save + '); ' + valid + ' && ' + resetOnEnter + ';'

    -var onEscape = newItem ? 'group.add = []' : 'field.edit = false'

    -var resetOnBlur = newItem ? '!stopblur && (group.add = [])' : 'field.edit = false'
    -var onBlur = valid + ' && ( ' + save + '); ' + resetOnBlur + ';'

    ignite-form-field-input-text(
        data-name=field
        data-ng-model=field
        data-ng-required='true'
        data-placeholder='Enter package name'
        data-java-keywords='true'
        data-java-package-name='true'
        data-ignite-unique=items
        data-ignite-form-field-input-autofocus='true'
        on-enter=onEnter
        on-escape=onEscape
        ng-blur=onBlur
    )
        block

//- Mixin for table address field.
mixin table-address-field(field, items, valid, save, newItem)
    -var resetOnEnter = newItem ? '(stopblur = true) && (group.add = [{}])' : '(field.edit = false)'
    -var onEnter = valid + ' && (' + save + '); ' + valid + ' && ' + resetOnEnter + ';'

    -var onEscape = newItem ? 'group.add = []' : 'field.edit = false'

    -var resetOnBlur = newItem ? '!stopblur && (group.add = [])' : 'field.edit = false'
    -var onBlur = valid + ' && ( ' + save + '); ' + resetOnBlur + ';'

    ignite-form-field-input-text(
        data-name=field
        data-ng-model=field
        data-ng-required='true'
        data-placeholder='IP address:port'
        data-ipaddress='true'
        data-ignite-unique=items
        data-ignite-form-field-input-autofocus='true'
        on-enter=onEnter
        on-escape=onEscape
        ng-blur=onBlur
    )
        block

//-
    Mixin for table save button.
    "||" used instead of "&&" to workaround escaping of "&&" to "&amp;&amp;"
mixin table-save-button(valid, save, newItem)
    -var reset = newItem ? 'group.add = []' : 'field.edit = false'

    i.fa.fa-floppy-o(
        ng-show=valid
        ng-click='!(#{valid}) || (#{save}); !(#{valid}) || (#{reset});'
        bs-tooltip
        data-title='Click icon or press [Enter] to save item'
    )

//- Mixin for table remove button.
mixin table-remove-conditional-button(items, show, tip)
    i.tipField.fa.fa-remove(
        ng-show='#{show}'
        ng-hide='field.edit'
        bs-tooltip='"#{tip}"'
        ng-click='#{items}.splice(#{items}.indexOf(model), 1)'
    )

//- Mixin for table remove button.
mixin table-remove-button(items, tip)
    +table-remove-conditional-button(items, 'true', tip)

//- Mixin for cache mode.
mixin cacheMode(lbl, model, name, placeholder)
    +dropdown(lbl, model, name, 'true', placeholder,
        '[\
            {value: "LOCAL", label: "LOCAL"},\
            {value: "REPLICATED", label: "REPLICATED"},\
            {value: "PARTITIONED", label: "PARTITIONED"}\
        ]',
        'Cache modes:\
        <ul>\
            <li>Partitioned - in this mode the overall key set will be divided into partitions and all partitions will be split equally between participating nodes</li>\
            <li>Replicated - in this mode all the keys are distributed to all participating nodes</li>\
            <li>Local - in this mode caches residing on different grid nodes will not know about each other</li>\
        </ul>'
    )

//- Mixin for eviction policy.
mixin evictionPolicy(model, name, required, enabled, tip)
    -var kind = model + '.kind'
    -var policy = model + '[' + kind + ']'

    +dropdown-required('Eviction policy:', kind, name + 'Kind', required, enabled, 'Not set',
        '[\
            {value: "LRU", label: "LRU"},\
            {value: "FIFO", label: "FIFO"},\
            {value: "SORTED", label: "Sorted"},\
            {value: undefined, label: "Not set"}\
        ]', tip)
    span(ng-if=kind)
        a.customize(ng-show='__.expanded' ng-click='__.expanded = false') Hide settings
        a.customize(ng-hide='__.expanded' ng-click='__.expanded = true') Show settings
        .panel-details.col-sm-12(ng-if='__.expanded')
            .details-row
                +number('Batch size', policy + '.batchSize', name + 'batchSize', enabled, '1', '0',
                    'Number of entries to remove on shrink')
            .details-row
                +number('Max memory size', policy + '.maxMemorySize', name + 'maxMemorySize', enabled, '0', '0',
                    'Maximum allowed cache size in bytes')
            .details-row
                +number('Max size', policy + '.maxSize', name + 'maxSize', enabled, '100000', '0',
                    'Maximum allowed size of cache before entry will start getting evicted')

//- Mixin for clusters dropdown.
mixin clusters(model, tip)
    +dropdown-multiple('<span>Clusters:</span>' + '<a ui-sref="base.configuration.clusters({id: ' + model + '._id})"> (add)</a>',
        model + '.clusters', 'clusters', 'Choose clusters', 'No clusters configured', 'clusters', tip)

//- Mixin for XML and Java preview.
mixin preview-xml-java(master, generator, detail)
    ignite-ui-ace-tabs
        .preview-panel(ng-init='mode = false')
            .preview-legend
                a(ng-class='{active: !mode, inactive: mode}' ng-click='mode = false') XML
                | &nbsp;
                a(ng-class='{active: mode, inactive: !mode}' ng-click='mode = true') Java
            .preview-content(ng-if='mode')
                ignite-ui-ace-java(data-master=master data-generator=generator ng-model='$parent.data' data-detail=detail)
            .preview-content(ng-if='!mode')
                ignite-ui-ace-xml(data-master=master data-generator=generator ng-model='$parent.data' data-detail=detail)
            .preview-content-empty(ng-if='!data')
                label All Defaults
